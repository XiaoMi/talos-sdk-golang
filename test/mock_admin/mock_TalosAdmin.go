// Code generated by MockGen. DO NOT EDIT.
// Source: TalosAdmin.go

// Package mock_admin is a generated GoMock package.
package mock_admin

import (
	reflect "reflect"

	topic "github.com/XiaoMi/talos-sdk-golang/thrift/topic"

	gomock "github.com/golang/mock/gomock"
)

// MockAdmin is a mock of Admin interface
type MockAdmin struct {
	ctrl     *gomock.Controller
	recorder *MockAdminMockRecorder
}

// MockAdminMockRecorder is the mock recorder for MockAdmin
type MockAdminMockRecorder struct {
	mock *MockAdmin
}

// NewMockAdmin creates a new mock instance
func NewMockAdmin(ctrl *gomock.Controller) *MockAdmin {
	mock := &MockAdmin{ctrl: ctrl}
	mock.recorder = &MockAdminMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAdmin) EXPECT() *MockAdminMockRecorder {
	return m.recorder
}

// DescribeTopic mocks base method
func (m *MockAdmin) DescribeTopic(request *topic.DescribeTopicRequest) (*topic.Topic, error) {
	ret := m.ctrl.Call(m, "DescribeTopic", request)
	ret0, _ := ret[0].(*topic.Topic)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeTopic indicates an expected call of DescribeTopic
func (mr *MockAdminMockRecorder) DescribeTopic(request interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeTopic", reflect.TypeOf((*MockAdmin)(nil).DescribeTopic), request)
}
